AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Description: 'Environment (dev or prod)'
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev

  VpcStackName:
    Description: 'Name of the VPC stack to import resources from'
    Type: String
    Default: ai-custom-bot-infr


Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "ConversationApiGateway-dev"
      StageName: !Ref Environment
      TracingEnabled: true
      BinaryMediaTypes:
        - "multipart/form-data"
        - "application/json"

  CreateConversationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "CreateConversation-${Environment}"
      Handler: src.entrypoints.api.handlers.create_conversation
      Runtime: python3.12
      CodeUri: .
      Timeout: 30
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AmazonS3FullAccess
        - AmazonOpenSearchServiceFullAccess
        - SecretsManagerReadWrite
        - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
          LOG_LEVEL: INFO
          ENVIRONMENT: !Sub "${Environment}"
          REGION: !Sub "${AWS::Region}"
      Tracing: Active
      Events:
        CreateConversationApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/v1/conversations
            Method: POST
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub "${VpcStackName}-LambdaSGId"
        SubnetIds:
          - Fn::ImportValue:
              !Sub "${VpcStackName}-PrivateSubnetA"
          - Fn::ImportValue:
              !Sub "${VpcStackName}-PrivateSubnetB"
          - Fn::ImportValue:
              !Sub "${VpcStackName}-PrivateSubnetC"

  ConversationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "Conversation-${Environment}"
      Handler: src.entrypoints.api.handlers.conversation
      Runtime: python3.12
      CodeUri: .
      Timeout: 30
      MemorySize: 256
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AmazonS3FullAccess
        - AmazonOpenSearchServiceFullAccess
        - SecretsManagerReadWrite
        - AmazonDynamoDBFullAccess
      Environment:
        Variables:
          AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
          LOG_LEVEL: INFO
          ENVIRONMENT: !Sub "${Environment}"
          REGION: !Sub "${AWS::Region}"
      Tracing: Active
      Events:
        ConversationApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/v1/conversations/messages
            Method: POST
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub "${VpcStackName}-LambdaSGId"
        SubnetIds:
          - Fn::ImportValue:
              !Sub "${VpcStackName}-PrivateSubnetA"
          - Fn::ImportValue:
              !Sub "${VpcStackName}-PrivateSubnetB"
          - Fn::ImportValue:
              !Sub "${VpcStackName}-PrivateSubnetC"
      AutoPublishAlias: !Ref Environment
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 5
