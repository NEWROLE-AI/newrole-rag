AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31


Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "SlackBotApiGateway-dev"
      StageName: "test"
      TracingEnabled: true
      BinaryMediaTypes:
        - "multipart/form-data"
        - "application/json"

  SlackBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src.entrypoints.api.handlers.handler
      Runtime: python3.12
      CodeUri: .
      Timeout: 30
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AmazonS3FullAccess
        - AmazonOpenSearchServiceFullAccess
        - SecretsManagerReadWrite
        - AmazonDynamoDBFullAccess
        - Statement:
            - Effect: Allow
              Action: lambda:InvokeFunction
              Resource:
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ai-custom-bot-slack-SlackBotFunction-*"
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ai-custom-bot-slack-SlackBotFunction"
      Environment:
        Variables:
          AWS_XRAY_CONTEXT_MISSING: LOG_ERROR
          LOG_LEVEL: INFO
          ENVIRONMENT: dev
      Tracing: Active
      Events:
        SlackEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /api/v1/slack/events
            Method: POST
      VpcConfig:
        SecurityGroupIds:
          - sg-0159afa3ca6ce8d06
        SubnetIds:
          - subnet-01a6f0d8ab5654d8e
          - subnet-0870c5719ed26e6c1
          - subnet-0544758b0bdeb9cf3
